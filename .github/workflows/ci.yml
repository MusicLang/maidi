name: CI

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
        pip install pytest pytest-cov
        pip install sphinx
        pip install .

    - name: Run tests with coverage
      run: |
        pytest --cov=maidi maidi/tests/
      env:
        CI: true

    - name: Run doc tests
      run: |
        pytest docs/ --doctest-glob="*.rst"
      env:
        CI: true

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}


  build-and-deploy:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools bump2version
        pip install -r requirements.txt
        pip install setuptools
        pip install sphinx
        pip install .
        python setup.py sdist

    - name: Configure Git
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "GARDIN Florian"

    - name: Bump version
      run: |
        current_version=$(python setup.py --version)
        bump2version ${{ github.event.inputs.release_type }} --tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push changes
      run: |
        git push origin HEAD --tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
