
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/musiclang_api/07_continue_song.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_musiclang_api_07_continue_song.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_musiclang_api_07_continue_song.py:


Extend an existing sample or song
======================================================

In this example :
- We load an existing song
- We ask musiclang to continue it for 4 bars

.. GENERATED FROM PYTHON SOURCE LINES 10-29

.. code-block:: Python



    import os
    from maidi import MidiScore, instrument, midi_library
    from maidi.integrations.api import MusicLangAPI

    # Assuming API_URL and API_KEY are set in the environment
    API_URL = os.getenv("API_URL")
    API_KEY = os.getenv("API_KEY")

    nb_bars_extension = 4

    # Create a 4 bar template with the given instruments
    score = MidiScore.from_midi(midi_library.get_midi_file('drum_and_bass'))

    # Call the musiclang API to predict the score
    api = MusicLangAPI(api_key=API_KEY, verbose=True)
    predicted_score = api.extend(score, nb_bars_extension, async_mode=False, polling_interval=3
    )
    predicted_score.write("predicted_score.mid")

.. _sphx_glr_download_auto_examples_musiclang_api_07_continue_song.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 07_continue_song.ipynb <07_continue_song.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 07_continue_song.py <07_continue_song.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
